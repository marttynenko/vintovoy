@function reverse($list, $recursive: false) {
  $result: ();

  @for $i from length($list) * -1 through -1 {
    @if type-of(nth($list, abs($i))) == list and $recursive {
      $result: append($result, reverse(nth($list, abs($i)), $recursive));
    } @else {
      $result: append($result, nth($list, abs($i)));
    }
  }

  @return $result;
}

.inner {
  margin: 0 auto;
  padding-left: $gutter;
  padding-right: $gutter;

	@media (max-width: 533px) {
		padding-left: 18px;
		padding-right: 18px;
	}
}
.row {
  display: -webkit-box;
	display: -webkit-flex;
	display: -webkit-inline-box;
	display: -webkit-inline-flex;
	display: inline-flex;
	display: -ms-flex;
	display: -ms-inline-flexbox;
	display: -ms-flexbox;	
	display: flex;
  -webkit-flex-flow: row wrap;
	-ms-flex-flow: row wrap;
	flex-flow: row wrap;
	-webkit-flex-wrap: wrap;
	-ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-left: -$col_gutter;
  margin-right: -$col_gutter;

	@media (max-width: 768px) {
		margin-left: -8px;
		margin-right: -8px;
	}
}
[class*="col-"] {
  width: 100%;
  padding-left: $col_gutter;
  padding-right: $col_gutter;

	@media (max-width: 768px) {
		padding-left: 8px;
		padding-right: 8px;
	}
}

@for $i from 1 through 12 {
  .col-#{$i} {
    -ms-flex: (100% / 12 * $i);
    flex: (100% / 12 * $i);
    max-width: (100% / 12 * $i);
  }
  .col-offset-#{$i} {
    margin-left: (100% / 12 * $i);
  }
}

$reverseBreakpoints: reverse($breakpoints);
@each $name, $screen in $reverseBreakpoints {
  @media (min-width: #{$screen}px) {
    @for $i from 1 through 12 {
      .col-#{$name}-#{$i} {
        -ms-flex: (100% / 12 * $i);
        flex: (100% / 12 * $i);
        max-width: (100% / 12 * $i);
      }
      .col-#{$name}-offset-#{$i} {
        margin-left: (100% / 12 * $i);
      }
    }
    .col-#{$name}-20 {
      -ms-flex: 0 0 20%;
      flex: 0 0 20%;
      max-width: 20%;
    }
    // @if ($name == "md" or $name == "us") {
    //   .inner, .container {
    //     max-width: 100%;
    //   }
    // } @else {
    //   .inner, .container {
    //     //max-width: ($screen - 40px);
    //     max-width: ($screen + px);
    //   }
    // }

		@if ($name == 'md' or $name == "lg") {
			.inner, .container {
				max-width: ($screen + px);
			}
		}
  }
}

.flex,
%flex {
	display: -webkit-box;
	display: -webkit-flex;
	display: -webkit-inline-box;
	display: -webkit-inline-flex;
	display: inline-flex;
	display: -ms-flex;
	display: -ms-inline-flexbox;
	display: -ms-flexbox;	
	display: flex;
}
%flc,
.flex-vertical {
	-webkit-box-orient: vertical;
	-webkit-box-direction: normal;
	-webkit-flex-direction: column;
	-ms-flex-direction: column;
	flex-direction: column;
}
%jsb,
.align-justify {
	-webkit-box-pack: justify;
	-webkit-justify-content: space-between;
	-ms-flex-pack: justify;
	-ms-justify-content: space-between;
	justify-content: space-between;
}
%jc,
.align-center {
	-webkit-box-pack: center;
	-webkit-justify-content: center;
	-ms-flex-pack: center;
	-ms-justify-content: center;
	justify-content: center;
}
%jfs,
.align-left {
	-webkit-box-pack: start;
	-webkit-justify-content: flex-start;
	-ms-flex-pack: start;
	-ms-justify-content: flex-start;
	justify-content: flex-start;
}
%jfe,
.align-right {
	-webkit-box-pack: end;
	-webkit-justify-content: flex-end;
	-ms-flex-pack: end;
	-ms-justify-content: flex-end;
	justify-content: flex-end;
}
%aic,
.valign-center {
	-webkit-box-align: center;
	-webkit-align-items: center;
	-ms-flex-align: center;
	-ms-align-items: center;
	align-items: center;
}
%aifs,
.valign-start {
	-webkit-box-align: start;
	-webkit-align-items: flex-start;
	-ms-flex-align: start;
	-ms-align-items: flex-start;
	align-items: flex-start;
}
%aife,
.valign-end {
	-webkit-box-align: end;
	-webkit-align-items: flex-end;
	-ms-flex-align: end;
	-ms-align-items: flex-end;
	align-items: flex-end;
}
%aibsl,
.valign-baseline {
	-webkit-box-align: baseline;
	-webkit-align-items: baseline;
	-ms-flex-align: baseline;
	-ms-align-items: baseline;
	align-items: baseline;
}
.self-bottom {
	-webkit-align-self: flex-end;
	-ms-align-self: flex-end;
	align-self: flex-end;
}
.self-top {
	-webkit-align-self: flex-start;
	-ms-align-self: flex-start;
	align-self: flex-start;
}
.self-center {
	-webkit-align-self: center;
	-ms-align-self: center;
	align-self: center;
}
%flg {
	-webkit-box-flex: 1;
	-webkit-flex-grow: 1;
	-ms-flex-positive: 1;
	flex-grow: 1;
}
%flw,
.flex-wrap {
	-webkit-flex-flow: row wrap;
	-ms-flex-flow: row wrap;
	flex-flow: row wrap;
	-webkit-flex-wrap: wrap;
	-ms-flex-wrap: wrap;
	flex-wrap: wrap;
}